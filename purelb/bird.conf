# from https://gitlab.com/purelb/bird_router/-/blob/4e5b57bd409ecf76426a77c6df1d606681d184ef/bird-cm.yml
# Basic configuration for PureLB Virtual Interface

# Configure logging
log stderr all;
#log "/var/log/bird.log" { debug, trace, info, remote, warning, error, auth, fatal, bug };

# birdvars is created by docker_entrypoint.  It reads env variables for use in configuration
include "/usr/local/include/birdvars.conf";

# Router ID set using birdvars
router id k8sipaddr;

watchdog warning 5 s;
watchdog timeout 30 s;

# The Device protocol is required, it provide a mechanism for getting 
# information from the Linux kernel
protocol device { 
    scan time 10; 
}

# The direct protocol is used to import the routes added by PureLb to kube-lb0
protocol direct {
    ipv4;
    ipv6;
    interface "kube-lb0";
}

# The kernel protocol is used to learn and import kernel routes. 
# These are needed to establish connectivity on the local network
# Note that no routes from Birds are exported to the kernel, export defaults to false.
protocol kernel {
    ipv4;
    scan time 10;			
    learn;		
}

protocol kernel {
    ipv6;
    scan time 10;
    learn;
}

# RIP/RIPNG example
#protocol rip {
#  ipv4 {
    # Export direct, static routes and ones from RIP itself
#    import none;
#    export where source ~ [ RTS_DEVICE, RTS_STATIC, RTS_RIP ];
#    };
#    interface "e*" {
#    update time 10;			# Default period is 30
#   timeout time 60;		# Default timeout is 180
#   #authentication cryptographic;	# No authentication by default
#   #password "hello" { algorithm hmac sha256; }; # Default is MD5
#   };
#}

#protocol rip ng {
#  ipv6 {
    # Export direct, static routes and ones from RIP itself
#   import none;
#   export where source ~ [ RTS_DEVICE, RTS_STATIC, RTS_RIP ];
#   };
#   interface "e*" {
#     update time 10;                 # Default period is 30
#     timeout time 60;                # Default timeout is 180
#     #authentication cryptographic;   # No authentication by default
#     #password "hello" { algorithm hmac sha256; }; # Default is MD5
#   };
#}

# OSPF example
protocol ospf v2  {
 ipv4 {
   import none;
   export where source ~ [ RTS_STATIC, RTS_DEVICE ];
 };
 area 0 {
   interface "e*" {
     type broadcast;         # Detected by default
       cost 10;                # Interface metric
   };
 };
}

protocol ospf v3 {
  ipv6 {
    import none;
    export where source = RTS_STATIC;
  };
  area 0 {
    interface "e*" {
      type broadcast;		# Detected by default
      cost 10;		# Interface metric
    };
  };
}

# Filter to drop all routes recieved from BGP
# filter bgp_reject {
#     reject;
# }

# BGP example, explicit name 'uplink1' is used instead of default 'bgp1'
# protocol bgp uplink1 {
#     description "Example Peer";
#     local k8sipaddr as 4200000003;
#     neighbor 172.30.250.1 external;
#     #multihop 2;              
#     #hold time 90;		# Default is 240
#     #password "secret";	# Password used for MD5 authentication
# 
#     ipv4 {			# IPv4 unicast (1/1)
#     # RTS_DEVICE matches routes added to kube-lb0 by protocol device
#     export where source ~ [ RTS_STATIC, RTS_BGP, RTS_DEVICE ];
#     import filter bgp_reject; # we are only advertizing 
#     };
# 
#     ipv6 {			# IPv6 unicast 
#     # RTS_DEVICE matches routes added to kube-lb0 by protocol device
#     export where  source ~ [ RTS_STATIC, RTS_BGP, RTS_DEVICE ];
#     import filter bgp_reject;
#     };
# }
