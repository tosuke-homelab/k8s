kind: Service
apiVersion: v1
metadata:
  name: dashboard-metrics-scraper
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: dashboard-metrics-scraper
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: dashboard-metrics-scraper
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: dashboard-metrics-scraper
  template:
    metadata:
      labels:
        app: dashboard-metrics-scraper
    spec:
      containers:
      - name: dashboard-metrics-scraper
        image: kubernetesui/metrics-scraper
        ports:
        - containerPort: 8000
          protocol: TCP
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 30
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1001
          runAsGroup: 2001
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            cpu: 100m
            memory: 50M
          requests:
            cpu: 10m
            memory: 10M
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "kubernetes.io/os": linux
      volumes:
      - name: tmp-volume
        emptyDir: {}
