apiVersion: traefik.containo.us/v1alpha1
kind: TraefikService
metadata:
  name: kubernetes-dashboard
spec:
  weighted:
    services:
    - kind: Service
      name: kubernetes-dashboard
      port: 443
      scheme: https
      serversTransport: kubernetes-dashboard
---
apiVersion: traefik.containo.us/v1alpha1
kind: ServersTransport
metadata:
  name: kubernetes-dashboard
spec:
  insecureSkipVerify: true
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
spec:
  selector:
    app: kubernetes-dashboard
  ports:
  - port: 443
    targetPort: 8443
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubernetes-dashboard
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
    spec:
      containers:
      - name: kubernetes-dashboard
        image: kubernetesui/dashboard
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          protocol: TCP
        args:
        - --auto-generate-certificates
        - --namespace=kube-system
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
          # Create on-disk volume to store exec logs
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 8443
          initialDelaySeconds: 30
          timeoutSeconds: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1001
          runAsGroup: 2001
        resources:
          requests:
            cpu: 10m
            memory: 20M
          limits:
            cpu: 100m
            memory: 100M
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: kubernetes-dashboard-certs
      - name: tmp-volume
        emptyDir: {}
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "kubernetes.io/os": linux
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule